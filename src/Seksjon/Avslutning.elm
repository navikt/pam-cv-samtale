module Seksjon.Avslutning exposing
    ( Model(..)
    , Msg(..)
    , SamtaleStatus(..)
    , init
    , meldingsLogg
    , update
    , viewBrukerInput
    )

-- MODEL --

import Api
import Browser.Dom as Dom
import Cv.Cv exposing (Cv)
import FrontendModuler.Knapp as Knapp
import Html exposing (..)
import Html.Attributes exposing (..)
import Html.Events exposing (..)
import Http
import Melding exposing (Melding)
import MeldingsLogg exposing (FerdigAnimertMeldingsLogg, FerdigAnimertStatus(..), MeldingsLogg, tilMeldingsLogg)
import Person exposing (Person)
import Personalia exposing (Personalia)
import Process
import SamtaleAnimasjon
import Task


type Model
    = Model ModelInfo


type alias ModelInfo =
    { seksjonsMeldingsLogg : MeldingsLogg
    , aktivSamtale : Samtale
    , cv : Cv
    , personalia : Personalia
    }


type Samtale
    = Intro
    | UnderOppf칮lging
    | DelMedArbeidsgiver Bool
    | AvsluttendeOrd
    | LagringSynlighetFeilet
    | HentPersonFeilet
    | VenterP친AnimasjonF칮rFullf칮ring


type SamtaleStatus
    = IkkeFerdig ( Model, Cmd Msg )
    | Ferdig Model FerdigAnimertMeldingsLogg


meldingsLogg : Model -> MeldingsLogg
meldingsLogg (Model model) =
    model.seksjonsMeldingsLogg



-- UPDATE --


type Msg
    = BrukerGodkjennerSynligCV String
    | BrukerGodkjennerIkkeSynligCV String
    | BrukerVilHentePersonP친Nytt String
    | BrukerVilAvslutte String
    | PersonHentet (Result Http.Error Person)
    | SynlighetPostet (Result Http.Error Bool)
    | ViewportSatt (Result Dom.Error ())
    | Start칀Skrive
    | Fullf칮rMelding


update : Msg -> Model -> SamtaleStatus
update msg (Model model) =
    case msg of
        ViewportSatt result ->
            ( Model model, Cmd.none )
                |> IkkeFerdig

        Start칀Skrive ->
            ( Model
                { model
                    | seksjonsMeldingsLogg =
                        MeldingsLogg.start칀Skrive model.seksjonsMeldingsLogg
                }
            , Cmd.batch
                [ SamtaleAnimasjon.scrollTilBunn ViewportSatt
                , Process.sleep 1000
                    |> Task.perform (\_ -> Fullf칮rMelding)
                ]
            )
                |> IkkeFerdig

        Fullf칮rMelding ->
            model.seksjonsMeldingsLogg
                |> MeldingsLogg.fullf칮rMelding
                |> updateEtterFullf칮rtMelding model

        PersonHentet result ->
            case result of
                Ok value ->
                    if Person.underOppfolging value then
                        ( nesteSamtaleStegUtenMelding model UnderOppf칮lging
                        , lagtTilSp칮rsm친lCmd
                        )
                            |> IkkeFerdig

                    else if Person.cvSynligForArbeidsgiver value then
                        ( nesteSamtaleStegUtenMelding model (DelMedArbeidsgiver True)
                        , lagtTilSp칮rsm친lCmd
                        )
                            |> IkkeFerdig

                    else
                        ( nesteSamtaleStegUtenMelding model (DelMedArbeidsgiver False)
                        , lagtTilSp칮rsm친lCmd
                        )
                            |> IkkeFerdig

                Err error ->
                    ( nesteSamtaleStegUtenMelding model HentPersonFeilet
                    , lagtTilSp칮rsm친lCmd
                    )
                        |> IkkeFerdig

        BrukerGodkjennerSynligCV knappeTekst ->
            ( Model
                { model
                    | seksjonsMeldingsLogg =
                        model.seksjonsMeldingsLogg
                            |> MeldingsLogg.leggTilSvar (Melding.svar [ knappeTekst ])
                }
            , Cmd.batch
                [ lagtTilSp칮rsm친lCmd
                , Api.postSynlighet SynlighetPostet True
                ]
            )
                |> IkkeFerdig

        BrukerGodkjennerIkkeSynligCV knappeTekst ->
            ( Model
                { model
                    | seksjonsMeldingsLogg =
                        model.seksjonsMeldingsLogg
                            |> MeldingsLogg.leggTilSvar (Melding.svar [ knappeTekst ])
                }
            , Cmd.batch
                [ lagtTilSp칮rsm친lCmd
                , Api.postSynlighet SynlighetPostet False
                ]
            )
                |> IkkeFerdig

        SynlighetPostet result ->
            case result of
                Ok value ->
                    ( nesteSamtaleStegUtenMelding model AvsluttendeOrd, lagtTilSp칮rsm친lCmd ) |> IkkeFerdig

                Err error ->
                    ( nesteSamtaleStegUtenMelding model LagringSynlighetFeilet
                    , lagtTilSp칮rsm친lCmd
                    )
                        |> IkkeFerdig

        BrukerVilHentePersonP친Nytt knappeTekst ->
            ( Model
                { model
                    | seksjonsMeldingsLogg =
                        model.seksjonsMeldingsLogg
                            |> MeldingsLogg.leggTilSvar (Melding.svar [ knappeTekst ])
                }
            , Cmd.batch
                [ lagtTilSp칮rsm친lCmd
                , hentSynlighet
                ]
            )
                |> IkkeFerdig

        BrukerVilAvslutte knappeTekst ->
            ( nesteSamtaleSteg model (Melding.svar [ knappeTekst ]) AvsluttendeOrd
            , Cmd.batch
                [ lagtTilSp칮rsm친lCmd
                ]
            )
                |> IkkeFerdig


nesteSamtaleSteg : ModelInfo -> Melding -> Samtale -> Model
nesteSamtaleSteg model melding samtaleSeksjon =
    Model
        { model
            | aktivSamtale = samtaleSeksjon
            , seksjonsMeldingsLogg =
                model.seksjonsMeldingsLogg
                    |> MeldingsLogg.leggTilSvar melding
                    |> MeldingsLogg.leggTilSp칮rsm친l (samtaleTilMeldingsLogg samtaleSeksjon)
        }


nesteSamtaleStegUtenMelding : ModelInfo -> Samtale -> Model
nesteSamtaleStegUtenMelding model samtaleSeksjon =
    Model
        { model
            | aktivSamtale = samtaleSeksjon
            , seksjonsMeldingsLogg =
                model.seksjonsMeldingsLogg
                    |> MeldingsLogg.leggTilSp칮rsm친l (samtaleTilMeldingsLogg samtaleSeksjon)
        }


updateEtterFullf칮rtMelding : ModelInfo -> MeldingsLogg -> SamtaleStatus
updateEtterFullf칮rtMelding model nyMeldingsLogg =
    case MeldingsLogg.ferdigAnimert nyMeldingsLogg of
        FerdigAnimert ferdigAnimertSamtale ->
            case model.aktivSamtale of
                VenterP친AnimasjonF칮rFullf칮ring ->
                    Ferdig (Model model) ferdigAnimertSamtale

                _ ->
                    ( Model
                        { model
                            | seksjonsMeldingsLogg =
                                nyMeldingsLogg
                        }
                    , SamtaleAnimasjon.scrollTilBunn ViewportSatt
                    )
                        |> IkkeFerdig

        MeldingerGjenst친r ->
            ( Model
                { model
                    | seksjonsMeldingsLogg =
                        nyMeldingsLogg
                }
            , lagtTilSp칮rsm친lCmd
            )
                |> IkkeFerdig


lagtTilSp칮rsm친lCmd : Cmd Msg
lagtTilSp칮rsm친lCmd =
    Cmd.batch
        [ SamtaleAnimasjon.scrollTilBunn ViewportSatt
        , Process.sleep 200
            |> Task.perform (\_ -> Start칀Skrive)
        ]


samtaleTilMeldingsLogg : Samtale -> List Melding
samtaleTilMeldingsLogg avslutningsSeksjon =
    case avslutningsSeksjon of
        VenterP친AnimasjonF칮rFullf칮ring ->
            []

        Intro ->
            [ Melding.sp칮rsm친l
                [ "I v친r l칮sning kan arbeidsgivere s칮ke opp CV-en din. De kan ta kontakt med deg hvis de har en ledig jobb du kan passe til." ]
            ]

        DelMedArbeidsgiver synlig ->
            if synlig then
                [ Melding.sp칮rsm친l
                    [ "CV-en din er allerede synlig for arbeidsgivere!"
                    , "칒nsker du fremdeles at arbeidsgivere skal kunne se CV-en din?"
                    ]
                ]

            else
                [ Melding.sp칮rsm친l
                    [ "칒nsker du at arbeidsgivere skal kunne se CV-en din?" ]
                ]

        UnderOppf칮lging ->
            [ Melding.sp칮rsm친l [ "Siden du er under oppf칮lging fra NAV, s친 vil CV-en din v칝re synlig for arbeidsgivere og NAV-veiledere." ]
            , Melding.sp칮rsm친l [ "Bra innsats! 游녨游녨 Alt du har skrevet her er lagret i CV-en din." ]
            , Melding.sp칮rsm친l [ "Da er vi ferdige med CV-en. Husk at du n친r som helst kan endre og forbedre den." ]
            , Melding.sp칮rsm친l [ "Lykke til med jobbjakten! 驕쥞잺" ]
            ]

        AvsluttendeOrd ->
            [ Melding.sp칮rsm친l [ "Bra innsats! 游녨游녨 Alt du har skrevet her er lagret i CV-en din." ]
            , Melding.sp칮rsm친l [ "Da er vi ferdige med CV-en. Husk at du n친r som helst kan endre og forbedre den." ]
            , Melding.sp칮rsm친l [ "Lykke til med jobbjakten! 驕쥞잺" ]
            ]

        HentPersonFeilet ->
            [ Melding.sp칮rsm친l
                [ "Oisann. Jeg klarte ikke 친 hente informasjonen for 친 fullf칮re registreringen."
                , "Vil du pr칮ve p친 nytt?"
                ]
            ]

        LagringSynlighetFeilet ->
            [ Melding.sp칮rsm친l
                [ "Oops. Jeg klarte ikke 친 lagre informasjonen."
                , "Vil du pr칮ve p친 nytt?"
                ]
            ]



-- VIEW --


viewBrukerInput : Model -> Html Msg
viewBrukerInput (Model model) =
    case MeldingsLogg.ferdigAnimert model.seksjonsMeldingsLogg of
        FerdigAnimert _ ->
            case model.aktivSamtale of
                AvsluttendeOrd ->
                    div []
                        [ a [ href "/cv/forhandsvis", class "avslutt-knapp" ]
                            [ div [ class "inputrad" ]
                                [ div [ class "inputrad-innhold" ]
                                    [ div [ class "Knapp" ]
                                        [ text "Avslutt og vis CV-en min" ]
                                    ]
                                ]
                            ]
                        ]

                VenterP친AnimasjonF칮rFullf칮ring ->
                    text ""

                DelMedArbeidsgiver _ ->
                    div [ class "skjema-wrapper" ]
                        [ div [ class "knapperad-wrapper" ]
                            [ div [ class "inputkolonne" ]
                                [ let
                                    synligCV =
                                        "Ja, Cv-en skal v칝re synlig for arbeidsgivere"
                                  in
                                  Knapp.knapp (BrukerGodkjennerSynligCV synligCV) synligCV
                                    |> Knapp.withClass Knapp.Spr친kniv친Knapp
                                    |> Knapp.toHtml
                                ]
                            , div [ class "inputkolonne" ]
                                [ let
                                    ikkeSynligCV =
                                        "Nei, CV-en skal bare v칝re synlig for meg"
                                  in
                                  Knapp.knapp (BrukerGodkjennerIkkeSynligCV ikkeSynligCV) ikkeSynligCV
                                    |> Knapp.withClass Knapp.Spr친kniv친Knapp
                                    |> Knapp.toHtml
                                ]
                            ]
                        ]

                Intro ->
                    text ""

                UnderOppf칮lging ->
                    text ""

                HentPersonFeilet ->
                    div [ class "inputkolonne" ]
                        [ div [ class "inputkolonne-innhold" ]
                            [ let
                                hentBruker =
                                    "Ja, pr칮v p친 nytt"
                              in
                              Knapp.knapp (BrukerVilHentePersonP친Nytt hentBruker) hentBruker
                                |> Knapp.withClass Knapp.Spr친kniv친Knapp
                                |> Knapp.toHtml
                            , let
                                avslutt =
                                    "Nei, jeg gj칮r det senere"
                              in
                              Knapp.knapp (BrukerVilAvslutte avslutt) avslutt
                                |> Knapp.withClass Knapp.Spr친kniv친Knapp
                                |> Knapp.toHtml
                            ]
                        ]

                LagringSynlighetFeilet ->
                    div [ class "skjema-wrapper" ]
                        [ div [ class "knapperad-wrapper" ]
                            [ div [ class "inputkolonne" ]
                                [ let
                                    synligCV =
                                        "Ja, Cv-en skal v칝re synlig for arbeidsgivere"
                                  in
                                  Knapp.knapp (BrukerGodkjennerSynligCV synligCV) synligCV
                                    |> Knapp.toHtml
                                ]
                            , div [ class "inputkolonne" ]
                                [ let
                                    ikkeSynligCV =
                                        "Nei, CV-en skal bare v칝re synlig for meg"
                                  in
                                  Knapp.knapp (BrukerGodkjennerIkkeSynligCV ikkeSynligCV) ikkeSynligCV
                                    |> Knapp.toHtml
                                ]
                            , div [ class "inputkolonne" ]
                                [ let
                                    avslutt =
                                        "Avslutt, jeg gj칮r det senere"
                                  in
                                  Knapp.knapp (BrukerVilAvslutte avslutt) avslutt
                                    |> Knapp.toHtml
                                ]
                            ]
                        ]

        MeldingerGjenst친r ->
            text ""



-- INIT --


hentSynlighet : Cmd Msg
hentSynlighet =
    Api.getPerson PersonHentet


init : Personalia -> Cv -> FerdigAnimertMeldingsLogg -> ( Model, Cmd Msg )
init personalia cv gammelMeldingsLogg =
    let
        aktivSamtale =
            Intro
    in
    ( Model
        { seksjonsMeldingsLogg =
            MeldingsLogg.leggTilSp칮rsm친l (samtaleTilMeldingsLogg aktivSamtale) (tilMeldingsLogg gammelMeldingsLogg)
        , aktivSamtale = aktivSamtale
        , personalia = personalia
        , cv = cv
        }
    , Cmd.batch
        [ lagtTilSp칮rsm친lCmd
        , hentSynlighet
        ]
    )
